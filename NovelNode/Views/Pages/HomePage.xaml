<Page
    x:Class="NovelNode.Views.Pages.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:NovelNode.Views.Pages"
    xmlns:controls="clr-namespace:NovelNode.Views.UserControls"
    xmlns:data="clr-namespace:NovelNode.Data"
    xmlns:helpers="clr-namespace:NovelNode.Helpers"
    xmlns:enums="clr-namespace:NovelNode.Enums"
    xmlns:nodify="https://miroiu.github.io/nodify"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="HomePage"
    d:DataContext="{d:DesignInstance local:HomePage,
    IsDesignTimeCreatable=False}"
    d:DesignHeight="1080"
    d:DesignWidth="1920"
    ui:Design.Background="{ui:ThemeResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{ui:ThemeResource TextFillColorPrimaryBrush}"
    Foreground="{ui:ThemeResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">
    <Page.Resources>
        <helpers:NodeVisibilityConverter x:Key="NodeVisibilityConverter" />
        <helpers:NameDataConverter x:Key="NameDataConverter" />
        <helpers:NulledVisibilityConverter x:Key="NulledVisibilityConverter" />
        <helpers:KeyValueVisibilityConverter x:Key="KeyValueVisibilityConverter" />
        <helpers:EnumValuesConverter x:Key="EnumValuesConverter" />
        <helpers:EnumVisibilityConverter x:Key="EnumVisibilityConverter" />
        <helpers:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
        <data:ProjectData x:Key="ProjectData" />
        <Color x:Key="NodifyEditor.SelectionRectangleColor">DodgerBlue</Color>
        <Color x:Key="NodifyEditor.BackgroundColor">#1E1E1E</Color>

        <SolidColorBrush x:Key="NodifyEditor.BackgroundBrush"
                         o:Freeze="True"
                         Color="{DynamicResource NodifyEditor.BackgroundColor}" />

        <SolidColorBrush x:Key="NodifyEditor.SelectionRectangleBackgroundBrush"
                         o:Freeze="True"
                         Opacity="0.1"
                         Color="{DynamicResource NodifyEditor.SelectionRectangleColor}" />

        <GeometryDrawing x:Key="SmallGridGeometry"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{StaticResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <GeometryDrawing x:Key="LargeGridGeometry"
                         Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
                         Brush="{StaticResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <DrawingBrush x:Key="SmallGridLinesDrawingBrush"
                      TileMode="Tile"
                      ViewportUnits="Absolute"
                      Viewport="0 0 20 20"
                      Transform="{Binding ViewportTransform, ElementName=NodeEditor}"
                      Drawing="{StaticResource SmallGridGeometry}" />

        <DrawingBrush x:Key="LargeGridLinesDrawingBrush"
                      TileMode="Tile"
                      ViewportUnits="Absolute"
                      Opacity="0.5"
                      Viewport="0 0 100 100"
                      Transform="{Binding ViewportTransform, ElementName=NodeEditor}"
                      Drawing="{StaticResource LargeGridGeometry}" />

        <ControlTemplate x:Key="TriangleConnector" TargetType="Control">
            <Polygon Width="14"
                     Height="14"
                     Points="1,1,1,13 13,6.5"
                     StrokeDashCap="Round"
                     StrokeLineJoin="Round"
                     StrokeStartLineCap="Round"
                     StrokeEndLineCap="Round"
                     Stroke="{TemplateBinding BorderBrush}"
                     Fill="{TemplateBinding Background}"
                     StrokeThickness="2" />
        </ControlTemplate>

        <ControlTemplate x:Key="RightExpanderToggleButtonTemplate" TargetType="ToggleButton">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Path Name="ExpandPath" Data="M0,0 L1,0 1,1 0,1 z" Fill="Black" Stretch="Uniform"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="ExpandPath" Property="Data" Value="M0,0 L0,1 1,0.5 z"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style x:Key="RightExpanderStyle" TargetType="Expander">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Grid>
                            <!-- Content Presenter -->
                            <ContentPresenter Grid.Column="1" Margin="0,0,4,0" ContentSource="Header"/>
                            <!-- Toggle Button -->
                            <ToggleButton Grid.Column="0" Template="{StaticResource RightExpanderToggleButtonTemplate}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <!-- Content -->
                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Visibility="Collapsed"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>
    <Page.InputBindings>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding ViewModel.SaveDataCommand}" />
    </Page.InputBindings>

    <Viewbox Stretch="Fill">
        <Grid Width="1920" Height="1010">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <TabControl Grid.Row="0">
                <TabItem Header="Editor">
                    <!-- Node Editor -->
                    <Grid Background="{StaticResource NodifyEditor.BackgroundBrush}">
                        <!-- Node Editor -->
                        <nodify:NodifyEditor x:Name="NodeEditor" ItemsSource="{Binding ViewModel.SceneSelected.Nodes}" Connections="{Binding ViewModel.SceneSelected.Connections}" PendingConnection="{Binding ViewModel.PendingConnection}" DisconnectConnectorCommand="{Binding ViewModel.NodeDisconnectCommand}" SelectedItems="{Binding ViewModel.SelectedNodes}" EnableRealtimeSelection="True" Background="{StaticResource SmallGridLinesDrawingBrush}" AllowDrop="True" Drop="OnNodeDrop" >
                            <nodify:NodifyEditor.InputBindings>
                                <KeyBinding Key="Delete" Command="{Binding ViewModel.NodeSelectionDeleteCommand}" />
                            </nodify:NodifyEditor.InputBindings>
                            <nodify:NodifyEditor.ItemContainerStyle>
                                <Style TargetType="{x:Type nodify:ItemContainer}">
                                    <Setter Property="Location" Value="{Binding Location}" />
                                </Style>
                            </nodify:NodifyEditor.ItemContainerStyle>

                            <nodify:NodifyEditor.ConnectionTemplate>
                                <DataTemplate DataType="{x:Type data:NodeConnection}">
                                    <nodify:CircuitConnection  Source="{Binding Source.Anchor}" Target="{Binding Target.Anchor}" StrokeThickness="8" >
                                        <nodify:CircuitConnection.Style>
                                            <Style TargetType="nodify:CircuitConnection">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Stroke" Value="DarkViolet" />
                                                        <Setter Property="StrokeThickness" Value="15" />
                                                        <Setter Property="ArrowSize" Value="20,20" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </nodify:CircuitConnection.Style>
                                    </nodify:CircuitConnection>
                                </DataTemplate>
                            </nodify:NodifyEditor.ConnectionTemplate>

                            <nodify:NodifyEditor.PendingConnectionTemplate>
                                <DataTemplate DataType="{x:Type data:NodeConnectionPending}">
                                    <nodify:PendingConnection StartedCommand="{Binding StartCommand}" CompletedCommand="{Binding FinishCommand}" AllowOnlyConnectors="True" />
                                </DataTemplate>
                            </nodify:NodifyEditor.PendingConnectionTemplate>

                            <nodify:NodifyEditor.ItemTemplate>
                                <DataTemplate>
                                    <nodify:Node Header="{Binding Type}" Input="{Binding Input}" Output="{Binding Output}" >
                                        <nodify:Node.InputConnectorTemplate>
                                            <DataTemplate DataType="{x:Type data:NodeConnector}">
                                                <nodify:NodeInput Anchor="{Binding Anchor, Mode=OneWayToSource}" IsConnected="{Binding IsConnected}" />
                                            </DataTemplate>
                                        </nodify:Node.InputConnectorTemplate>

                                        <nodify:Node.OutputConnectorTemplate>
                                            <DataTemplate DataType="{x:Type data:NodeConnector}">
                                                <nodify:NodeOutput Header="{Binding Title}" Anchor="{Binding Anchor, Mode=OneWayToSource}" IsConnected="{Binding IsConnected}" ConnectorTemplate="{StaticResource TriangleConnector}" />
                                            </DataTemplate>
                                        </nodify:Node.OutputConnectorTemplate>

                                        <StackPanel Margin="0,5" ToolTipService.ToolTip="{Binding Tooltip}" >
                                            <StackPanel Margin="0,10">
                                                <TextBlock Text="GUID" VerticalAlignment="Center" Margin="0,5" />
                                                <TextBox Text="{Binding Guid}" IsReadOnly="True" />
                                                <TextBlock Text="Previous Node" VerticalAlignment="Center" Margin="0,5" />
                                                <TextBox Text="{Binding Previous}" IsReadOnly="True" />
                                            </StackPanel>

                                            <!-- properties from Nodes -->
                                            <Expander Header="Node Properties">
                                                <Grid>
                                                    <!-- Background Node -->
                                                    <StackPanel Margin="10" Visibility="{Binding Type, Converter={StaticResource NodeVisibilityConverter}, ConverterParameter=State}">
                                                        <TextBlock Text="State" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static helpers:Extensions.NodeSwitch}}" SelectedValue="{Binding State}" />
                                                        <TextBlock Text="Next Node" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBox Text="{Binding Next}" IsReadOnly="True" Width="300" Margin="0,5" TextWrapping="Wrap" />
                                                    </StackPanel>

                                                    <!-- Background Node -->
                                                    <StackPanel Margin="10" Visibility="{Binding Type, Converter={StaticResource NodeVisibilityConverter}, ConverterParameter=Background}">
                                                        <TextBlock Text="Asset Type" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static helpers:Extensions.AssetType}}" SelectedValue="{Binding AssetType}" Margin="0,5" />
                                                        <TextBlock Text="Asset" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding DataContext.ViewModel.SceneSelected.Backgrounds, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" SelectedValue="{Binding Background}" DisplayMemberPath="Key" SelectedValuePath="Key" Visibility="{Binding AssetType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Sprite}" />
                                                        <ComboBox ItemsSource="{Binding DataContext.ViewModel.SceneSelected.Sounds, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" SelectedValue="{Binding Background}" DisplayMemberPath="Name" SelectedValuePath="Name" Visibility="{Binding AssetType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Audio}" />
                                                        <Image Source="{Binding Background, Converter={StaticResource NameDataConverter}, ConverterParameter=Background}" MaxWidth="300" MaxHeight="200" Margin="0,5" Visibility="{Binding AssetType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Sprite}" />
                                                        <TextBlock Text="State" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static helpers:Extensions.NodeSwitch}}" SelectedValue="{Binding State}" />
                                                        <TextBlock Text="Fade Time" VerticalAlignment="Center" Margin="0,5" Visibility="{Binding AssetType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Sprite}" />
                                                        <TextBox Text="{Binding FadeTime}" InputScope="Digits" Width="300" Margin="0,5" TextWrapping="Wrap" Visibility="{Binding AssetType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Sprite}" />
                                                        <TextBlock Text="Play Loop" VerticalAlignment="Center" Margin="0,5" Visibility="{Binding AssetType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Audio}" />
                                                        <ui:ToggleSwitch IsChecked="{Binding Loop}" Margin="0,5" Visibility="{Binding AssetType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Audio}" />
                                                        <TextBlock Text="Next Node" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBox Text="{Binding Next}" IsReadOnly="True" Width="300" Margin="0,5" TextWrapping="Wrap" />
                                                    </StackPanel>

                                                    <!-- Character Node -->
                                                    <StackPanel Margin="10" Visibility="{Binding Type, Converter={StaticResource NodeVisibilityConverter}, ConverterParameter=Character}">
                                                        <StackPanel.Background>
                                                            <ImageBrush ImageSource="{Binding Converter={StaticResource NameDataConverter}, ConverterParameter=NodeCharacterSpritePath}" />
                                                        </StackPanel.Background>
                                                        <TextBlock Text="Character" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static data:ProjectData.Current}, Path=Characters}" SelectedItem="{Binding CharacterData}" DisplayMemberPath="Name" />

                                                        <TextBlock Text="Sprite" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding CharacterData.Sprites}" SelectedValue="{Binding Sprite}" DisplayMemberPath="Key" SelectedValuePath="Key" />

                                                        <TextBlock Text="State" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static helpers:Extensions.NodeSwitch}}" SelectedValue="{Binding State}" />
                                                        <TextBlock Text="Position %" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBox Text="{Binding Position}" InputScope="Digits" Width="300" Margin="0,5" TextWrapping="Wrap" />
                                                        <TextBlock Text="Fade Time" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBox Text="{Binding FadeTime}" InputScope="Digits" Width="300" Margin="0,5" TextWrapping="Wrap" />
                                                        <TextBlock Text="Next Node" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBox Text="{Binding Next}" IsReadOnly="True" Width="300" Margin="0,5" TextWrapping="Wrap" />
                                                    </StackPanel>

                                                    <!-- Dialogue Node -->
                                                    <StackPanel Margin="10" Visibility="{Binding Type, Converter={StaticResource NodeVisibilityConverter}, ConverterParameter=Dialogue}">
                                                        <TextBlock Text="Character" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static data:ProjectData.Current}, Path=Characters}" SelectedItem="{Binding CharacterData}" DisplayMemberPath="Name" Visibility="{Binding IsPlayerDialogue, Converter={StaticResource BoolVisibilityConverter}, ConverterParameter=false}" />
                                                        <ui:ToggleSwitch Content="Player Dialogue" Margin="0,5" IsChecked="{Binding IsPlayerDialogue}" />

                                                        <Grid Margin="0,10,0,5">
                                                            <TextBlock Text="Lines" VerticalAlignment="Center" />
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                                <Button Command="{Binding RemoveDialogueLineCommand}" CommandParameter="{Binding SelectedItem, ElementName=DialogueLinesList}" Margin="5,0" >
                                                                    <ui:SymbolIcon Symbol="Delete24" />
                                                                </Button>
                                                                <Button Command="{Binding AddDialogueLineCommand}" >
                                                                    <ui:SymbolIcon Symbol="Add24" />
                                                                </Button>
                                                            </StackPanel>
                                                        </Grid>

                                                        <Expander Header="Lines" >
                                                            <ListView x:Name="DialogueLinesList" ItemsSource="{Binding Lines}">
                                                                <ListView.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <ui:Card>
                                                                            <StackPanel Margin="10">
                                                                                <TextBlock Text="Text" VerticalAlignment="Center" Margin="0,5" />
                                                                                <TextBox Text="{Binding Text}" Width="300" Margin="0,5" TextWrapping="Wrap" />

                                                                                <StackPanel Visibility="{Binding DataContext.IsPlayerDialogue, RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Converter={StaticResource BoolVisibilityConverter}, ConverterParameter=false}">
                                                                                    <TextBlock Text="Sprite" VerticalAlignment="Center" Margin="0,5" />
                                                                                    <ComboBox ItemsSource="{Binding DataContext.CharacterData.Sprites, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" SelectedValue="{Binding CharacterSprite}" DisplayMemberPath="Key" SelectedValuePath="Key" />
                                                                                </StackPanel>

                                                                                <TextBlock Text="Audio" VerticalAlignment="Center" Margin="0,5" />
                                                                                <ComboBox ItemsSource="{Binding DataContext.CharacterData.Sounds, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" SelectedValue="{Binding CharacterAudio}" DisplayMemberPath="Name" SelectedValuePath="Name" />
                                                                            </StackPanel>
                                                                        </ui:Card>
                                                                    </DataTemplate>
                                                                </ListView.ItemTemplate>
                                                            </ListView>

                                                        </Expander>
                                                        <TextBlock Text="Next Node" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBox Text="{Binding Next}" IsReadOnly="True"  Margin="0,5" TextWrapping="Wrap" />
                                                    </StackPanel>

                                                    <!-- Choice Node -->
                                                    <StackPanel Margin="10" Visibility="{Binding Type, Converter={StaticResource NodeVisibilityConverter}, ConverterParameter=Choice}">
                                                        <Grid Margin="0,5">
                                                            <TextBlock Text="Choices" VerticalAlignment="Center" />
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                                <Button Command="{Binding RemoveChoiceCommand}" CommandParameter="{Binding SelectedItem, ElementName=ChoicesList}" Margin="5,0" >
                                                                    <ui:SymbolIcon Symbol="Delete24" />
                                                                </Button>
                                                                <Button Command="{Binding AddChoiceCommand}" >
                                                                    <ui:SymbolIcon Symbol="Add24" />
                                                                </Button>
                                                            </StackPanel>
                                                        </Grid>
                                                        <!-- Assuming you want to display each line -->
                                                        <ListView x:Name="ChoicesList" ItemsSource="{Binding Choices}">
                                                            <ListView.ItemTemplate>
                                                                <DataTemplate>
                                                                    <ui:Card Margin="5">
                                                                        <StackPanel>
                                                                            <TextBlock Text="Choice" VerticalAlignment="Center" Margin="0,5" />
                                                                            <TextBox Text="{Binding Text}" Width="300" Margin="0,5" TextWrapping="Wrap" />
                                                                            <TextBlock Text="Next Node" VerticalAlignment="Center" Margin="0,5" />
                                                                            <TextBox Text="{Binding Next}" IsReadOnly="True" Width="300" Margin="0,5" TextWrapping="Wrap" />
                                                                            <TextBlock Text="Node Output Index" VerticalAlignment="Center" Margin="0,5" />
                                                                            <TextBox Text="{Binding Output}" InputScope="Number" Width="300" Margin="0,5" TextWrapping="Wrap" />
                                                                        </StackPanel>
                                                                    </ui:Card>
                                                                </DataTemplate>
                                                            </ListView.ItemTemplate>
                                                        </ListView>

                                                    </StackPanel>

                                                    <!-- Event Node -->
                                                    <StackPanel Margin="10" Visibility="{Binding Type, Converter={StaticResource NodeVisibilityConverter}, ConverterParameter=Event}">
                                                        <TextBlock Text="Blackboard Name" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static data:ProjectData.Current}, Path=Blackboards}" SelectedValue="{Binding BlackboardName}" DisplayMemberPath="Name" SelectedValuePath="Name" />
                                                        <TextBlock Text="Blackboard Type" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static helpers:Extensions.ValueType}}" SelectedValue="{Binding BlackboardType}" Margin="0,5"/>
                                                        <TextBlock Text="Blackboard Key" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding BlackboardData}" SelectedValue="{Binding BlackboardKey}" DisplayMemberPath="Key" SelectedValuePath="Key" />
                                                        <!-- Provide options based on the selected ValueType -->
                                                        <StackPanel Margin="0,5" Visibility="{Binding BlackboardKey, Converter={StaticResource NulledVisibilityConverter}, ConverterParameter=true}">
                                                            <TextBlock Text="Compare Value" VerticalAlignment="Center" Margin="0,5" />
                                                            <TextBox Text="{Binding NewValue}" Margin="0,5" Visibility="{Binding BlackboardType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=String}" />
                                                            <StackPanel Visibility="{Binding BlackboardType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Float}">
                                                                <TextBox Text="{Binding NewValue}" Margin="0,5" InputScope="Number"/>
                                                                <ComboBox ItemsSource="{Binding Source={x:Static helpers:Extensions.EventTask}}" SelectedValue="{Binding Operator}" Margin="0,5"/>
                                                            </StackPanel>
                                                            <ui:ToggleSwitch Content="{Binding NewValue}" IsChecked="{Binding NewValue}" Margin="0,5" Visibility="{Binding BlackboardType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Boolean}" />
                                                        </StackPanel>
                                                    </StackPanel>

                                                    <!-- Condition Node -->
                                                    <StackPanel Margin="10" Visibility="{Binding Type, Converter={StaticResource NodeVisibilityConverter}, ConverterParameter=Condition}">
                                                        <TextBlock Text="Blackboard Name" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static data:ProjectData.Current}, Path=Blackboards}" SelectedValue="{Binding BlackboardName}" DisplayMemberPath="Name" SelectedValuePath="Name" />
                                                        <TextBlock Text="Blackboard Type" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static helpers:Extensions.ValueType}}" SelectedValue="{Binding BlackboardType}" Margin="0,5"/>
                                                        <TextBlock Text="Blackboard Key" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding BlackboardData}" SelectedValue="{Binding BlackboardKey}" DisplayMemberPath="Key" SelectedValuePath="Key" />
                                                        <TextBlock Text="Comparison Operator" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static helpers:Extensions.ComparisonOperator}}" SelectedItem="{Binding Operator}" Margin="0,5"/>
                                                        <TextBlock Text="Compare Value" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBox Text="{Binding CompareValue}" Margin="0,5"/>
                                                    </StackPanel>

                                                    <!-- Scene Node -->
                                                    <StackPanel Margin="10" Visibility="{Binding Type, Converter={StaticResource NodeVisibilityConverter}, ConverterParameter=Scene}">
                                                        <TextBlock Text="Scene" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static data:ProjectData.Current}, Path=Scenes}" SelectedValue="{Binding SceneName}" DisplayMemberPath="Name" SelectedValuePath="Name" />
                                                        <TextBlock Text="Fade Time" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBox Text="{Binding FadeTime}" InputScope="Digits" Width="300" Margin="0,5" TextWrapping="Wrap" />
                                                    </StackPanel>

                                                    <!-- Checkpoint Node -->
                                                    <StackPanel Margin="10" Visibility="{Binding Type, Converter={StaticResource NodeVisibilityConverter}, ConverterParameter=Checkpoint}">
                                                        <TextBlock Text="Action" VerticalAlignment="Center" Margin="0,5" />
                                                        <ComboBox ItemsSource="{Binding Source={x:Static helpers:Extensions.CheckpointAction}}" SelectedItem="{Binding Action}" Margin="0,5"/>

                                                        <TextBlock Text="Checkpoint ID" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBox Text="{Binding CheckpointID}" Margin="0,5"/>

                                                        <StackPanel>
                                                            <TextBlock Text="Target Checkpoint ID" VerticalAlignment="Center" Margin="0,5" />
                                                            <TextBox Text="{Binding TargetCheckpointID}" Margin="0,5"/>

                                                            <StackPanel.Style>
                                                                <Style TargetType="StackPanel">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Action}" Value="{x:Static enums:CheckpointAction.Rollback}">
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </StackPanel.Style>
                                                        </StackPanel>

                                                    </StackPanel>

                                                    <!-- Combiner Node -->
                                                    <StackPanel Margin="10" Visibility="{Binding Type, Converter={StaticResource NodeVisibilityConverter}, ConverterParameter=Combiner}">
                                                        <TextBlock Text="Merged Nodes Count" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBlock Text="{Binding Input.Count}" VerticalAlignment="Center" Margin="0,5" />
                                                        <Grid Margin="0,10,0,5">
                                                            <TextBlock Text="Sockets" VerticalAlignment="Center" />
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                                <Button Command="{Binding RemoveInputCommand}" Margin="5,0" >
                                                                    <ui:SymbolIcon Symbol="Line24" />
                                                                </Button>
                                                                <Button Command="{Binding AddInputCommand}" >
                                                                    <ui:SymbolIcon Symbol="Add24" />
                                                                </Button>
                                                            </StackPanel>
                                                        </Grid>

                                                        <TextBlock Text="Next Node" VerticalAlignment="Center" Margin="0,5" />
                                                        <TextBox Text="{Binding Next}" IsReadOnly="True"  Margin="0,5" TextWrapping="Wrap" />
                                                    </StackPanel>

                                                </Grid>
                                            </Expander>
                                        </StackPanel>
                                    </nodify:Node>
                                </DataTemplate>
                            </nodify:NodifyEditor.ItemTemplate>
                        </nodify:NodifyEditor>

                        <Grid Background="{StaticResource LargeGridLinesDrawingBrush}" Panel.ZIndex="-2" />
                        <ui:Card Background="{ui:ThemeResource ApplicationBackgroundBrush}" Margin="25" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <ScrollViewer  MaxHeight="250">
                                <ItemsControl ItemsSource="{Binding ViewModel.Toolbox}" >
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type data:Node}">
                                            <ui:Card Margin="5" MouseMove="OnNodeDrag" ToolTipService.ToolTip="{Binding Tooltip}">
                                                <StackPanel Orientation="Horizontal">
                                                    <ui:SymbolIcon Symbol="VirtualNetwork20" FontSize="18" Margin="10,0" />
                                                    <TextBlock Text="{Binding Type}" FontSize="18" HorizontalAlignment="Center" />
                                                </StackPanel>
                                            </ui:Card>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </ui:Card>
                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Words: " FontFamily="Cambria" FontSize="26" HorizontalAlignment="Left" FontWeight="Bold" Margin="5" />
                                <TextBlock Text="{Binding ViewModel.SceneSelected.WordsCount}" FontFamily="Cambria" FontSize="26" HorizontalAlignment="Left" FontWeight="Bold" Margin="5" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="ID: " FontFamily="Cambria" FontSize="26" HorizontalAlignment="Left" FontWeight="Bold" Margin="5" />
                                <TextBlock Text="{Binding ViewModel.SceneSelected.ID}" FontFamily="Cambria" FontSize="26" HorizontalAlignment="Left" FontWeight="Bold" Margin="5" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Player">
                    <controls:PlayerView x:Name="Player" Visibility="{Binding ElementName=Player, Path=ViewModel.State, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Playing}" />
                </TabItem>
            </TabControl>

            <!-- Save & Settings Options -->
            <StackPanel Grid.Row="0" Margin="0,-10" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                <Button Margin="5,0" Command="{Binding ElementName=Player,  Path=ViewModel.ExecuteCommand}">
                    <Grid>
                        <ui:SymbolIcon Symbol="Play24" FontSize="24" Visibility="{Binding ElementName=Player, Path=ViewModel.State, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=!Playing}" />
                        <ui:SymbolIcon Symbol="Stop24" FontSize="24" Visibility="{Binding ElementName=Player, Path=ViewModel.State, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Playing}" />
                    </Grid>
                </Button>
                <Button Margin="5,0" Command="{Binding ViewModel.SaveDataCommand}">
                    <ui:SymbolIcon Symbol="Save24" FontSize="24" />
                </Button>
                <Button Margin="5,0" Command="{Binding ViewModel.NavigateToCommand}" CommandParameter="Settings">
                    <ui:SymbolIcon Symbol="Settings24" FontSize="24" />
                </Button>

                <Button Margin="5,0" Command="{Binding ViewModel.ExportCommand}">
                    <ui:SymbolIcon Symbol="ArrowExportUp24" FontSize="24" />
                </Button>
            </StackPanel>

            <!-- Scenes -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- Characters Editor -->
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- Characters List -->
                    <StackPanel Grid.Row="0" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,50,0,0">
                        <TextBlock Text="Character" FontFamily="Cambria" FontSize="56" HorizontalAlignment="Left" FontWeight="Bold" Margin="0,0,20,0" />
                        <ComboBox ItemsSource="{Binding Source={x:Static data:ProjectData.Current}, Path=Characters}" SelectedItem="{Binding ViewModel.CharacterSelected}" MinHeight="65" MaxHeight="65" MinWidth="300" >
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type data:CharacterData}">
                                    <StackPanel Orientation="Horizontal" >
                                        <Image Source="{Binding Avatar, Converter={StaticResource NameDataConverter}, ConverterParameter=RelativePathSprite}" MaxHeight="65" />
                                        <TextBlock Text="{Binding Name}" FontFamily="Cambria" FontSize="32" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,5,0" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <StackPanel Orientation="Horizontal"  Margin="0,10">
                            <Button Command="{Binding ViewModel.CharacterAddCommand}" Margin="5,0">
                                <ui:SymbolIcon Symbol="Add48" FontSize="48" />
                            </Button>
                            <Button Command="{Binding ViewModel.CharacterDeleteCommand}" Margin="5,0">
                                <ui:SymbolIcon Symbol="Delete48" FontSize="48" />
                            </Button>
                        </StackPanel>
                    </StackPanel>

                    <!-- Character Sprites & Audio -->
                    <TabControl Grid.Row="2" Visibility="{Binding ViewModel.CharacterSelected, Converter={StaticResource NulledVisibilityConverter}, ConverterParameter=true}">
                        <!-- Sprites -->
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <ui:SymbolIcon Grid.Column="0" Symbol="Image24" />
                                    <TextBlock Grid.Column="1" Text="Sprites" Margin="5,0" HorizontalAlignment="Stretch" />
                                    <Button Grid.Column="2" Command="{Binding ViewModel.CharacterSpriteAddCommand}" Height="20" HorizontalAlignment="Right" Margin="0">
                                        <ui:SymbolIcon Symbol="GridDots28" FontSize="32" />
                                    </Button>
                                </StackPanel>
                            </TabItem.Header>
                            <ui:VirtualizingItemsControl ItemsSource="{Binding ViewModel.CharacterSelected.Sprites}">
                                <ui:VirtualizingItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ui:CardAction Width="160" Margin="10" Command="{Binding DataContext.ViewModel.CharacterSpritePreviewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" CommandParameter="{Binding}" IsChevronVisible="False">
                                            <StackPanel>
                                                <Image Source="{Binding Key, Converter={StaticResource NameDataConverter}, ConverterParameter=CharacterSpritePath}" Height="200" Margin="0,10" />
                                                <TextBlock Text="{Binding Key}" FontFamily="Cambria" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" />
                                            </StackPanel>
                                        </ui:CardAction>
                                    </DataTemplate>
                                </ui:VirtualizingItemsControl.ItemTemplate>
                                <ui:VirtualizingItemsControl.Template>
                                    <ControlTemplate>
                                        <ScrollViewer Margin="10" Height="310">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ui:VirtualizingItemsControl.Template>
                            </ui:VirtualizingItemsControl>

                        </TabItem>
                        <!-- Audio -->
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <ui:SymbolIcon Grid.Column="0" Symbol="HeadphonesSoundWave24" />
                                    <TextBlock Grid.Column="1" Text="Sounds" Margin="5,0" HorizontalAlignment="Stretch" />
                                    <Button Grid.Column="2" Command="{Binding ViewModel.CharacterAudioAddCommand}" Height="20" HorizontalAlignment="Right" Margin="0">
                                        <ui:SymbolIcon Symbol="GridDots28" FontSize="32" />
                                    </Button>
                                </StackPanel>
                            </TabItem.Header>
                            <ui:VirtualizingItemsControl ItemsSource="{Binding ViewModel.CharacterSelected.Sounds}">
                                <ui:VirtualizingItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ui:Card Width="200" Margin="10">
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,10" HorizontalAlignment="Center">
                                                    <Button Command="{Binding DataContext.ViewModel.AudioPlayCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" CommandParameter="{Binding}" Margin="5,0">
                                                        <ui:SymbolIcon Symbol="Play24" FontSize="24" />
                                                    </Button>
                                                    <Button Command="{Binding DataContext.ViewModel.CharacterAudioDeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" CommandParameter="{Binding}" Margin="5,0">
                                                        <ui:SymbolIcon Symbol="Delete24" FontSize="24" />
                                                    </Button>
                                                </StackPanel>
                                                <Slider VerticalAlignment="Center" Value="{Binding AudioFile.Position, Mode=TwoWay}" Minimum="0" Maximum="{Binding AudioFile.Length}" />
                                                <TextBlock Text="{Binding Name}" FontFamily="Cambria" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" />
                                            </StackPanel>
                                        </ui:Card>
                                    </DataTemplate>
                                </ui:VirtualizingItemsControl.ItemTemplate>
                                <ui:VirtualizingItemsControl.Template>
                                    <ControlTemplate>
                                        <ScrollViewer Margin="10" Height="310" Visibility="Visible">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ui:VirtualizingItemsControl.Template>
                            </ui:VirtualizingItemsControl>
                        </TabItem>

                    </TabControl>
                </Grid>

                <!-- Scenes Editor -->
                <Grid Grid.Column="1" Margin="15,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- Scenes List -->
                    <StackPanel Grid.Row="0" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,50,0,0">
                        <TextBlock Text="Scene" FontFamily="Cambria" FontSize="56" HorizontalAlignment="Left" FontWeight="Bold" Margin="0,0,50,0" />
                        <ComboBox ItemsSource="{Binding Source={x:Static data:ProjectData.Current}, Path=Scenes}" SelectedItem="{Binding ViewModel.SceneSelected}" FontSize="36" DisplayMemberPath="Name" MinWidth="300" MinHeight="50" />
                        <StackPanel Orientation="Horizontal"  Margin="10">
                            <Button Command="{Binding ViewModel.ScenesAddCommand}" Margin="5,0">
                                <ui:SymbolIcon Symbol="Add48" FontSize="48" />
                            </Button>
                            <Button Command="{Binding ViewModel.ScenesDeleteCommand}" Margin="5,0">
                                <ui:SymbolIcon Symbol="Delete48" FontSize="48" />
                            </Button>
                        </StackPanel>
                    </StackPanel>

                    <!-- Scene Sprites & Audio -->
                    <TabControl Grid.Row="2" Visibility="{Binding ViewModel.SceneSelected, Converter={StaticResource NulledVisibilityConverter}, ConverterParameter=true}">
                        <!-- Sprites -->
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <ui:SymbolIcon Grid.Column="0" Symbol="Image24" />
                                    <TextBlock Grid.Column="1" Text="Sprites" Margin="5,0" HorizontalAlignment="Stretch" />
                                    <Button Grid.Column="2" Command="{Binding ViewModel.ScenesSpriteAddCommand}" Height="20" HorizontalAlignment="Right" Margin="0">
                                        <ui:SymbolIcon Symbol="GridDots28" FontSize="32" />
                                    </Button>
                                </StackPanel>
                            </TabItem.Header>
                            <ui:VirtualizingItemsControl ItemsSource="{Binding ViewModel.SceneSelected.Backgrounds}">
                                <ui:VirtualizingItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ui:CardAction MaxWidth="300" Margin="10" Command="{Binding DataContext.ViewModel.ScenesSpritePreviewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" CommandParameter="{Binding}" IsChevronVisible="False">
                                            <StackPanel>
                                                <Image Source="{Binding Key, Converter={StaticResource NameDataConverter}, ConverterParameter=Background}" Margin="0,10" />
                                                <TextBlock Text="{Binding Key}" FontFamily="Cambria" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" />
                                            </StackPanel>
                                        </ui:CardAction>
                                    </DataTemplate>
                                </ui:VirtualizingItemsControl.ItemTemplate>
                                <ui:VirtualizingItemsControl.Template>
                                    <ControlTemplate>
                                        <ScrollViewer Margin="10" Height="310">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ui:VirtualizingItemsControl.Template>
                            </ui:VirtualizingItemsControl>
                        </TabItem>
                        <!-- Audio -->
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <ui:SymbolIcon Grid.Column="0" Symbol="HeadphonesSoundWave24" />
                                    <TextBlock Grid.Column="1" Text="Sounds" Margin="5,0" HorizontalAlignment="Stretch" />
                                    <Button Grid.Column="2" Command="{Binding ViewModel.ScenesAudioAddCommand}" Height="20" HorizontalAlignment="Right" Margin="0">
                                        <ui:SymbolIcon Symbol="GridDots28" FontSize="32" />
                                    </Button>
                                </StackPanel>
                            </TabItem.Header>
                            <ui:VirtualizingItemsControl ItemsSource="{Binding ViewModel.SceneSelected.Sounds}">
                                <ui:VirtualizingItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ui:Card Width="200" Margin="10">
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,10" HorizontalAlignment="Center">
                                                    <Button Command="{Binding DataContext.ViewModel.AudioPlayCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" CommandParameter="{Binding}" Margin="5,0">
                                                        <ui:SymbolIcon Symbol="Play24" FontSize="24" />
                                                    </Button>
                                                    <Button Command="{Binding DataContext.ViewModel.ScenesAudioDeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" CommandParameter="{Binding}" Margin="5,0">
                                                        <ui:SymbolIcon Symbol="Delete24" FontSize="24" />
                                                    </Button>
                                                </StackPanel>
                                                <Slider VerticalAlignment="Center" Value="{Binding AudioFile.Position, Mode=TwoWay}" Minimum="0" Maximum="{Binding AudioFile.Length}" />
                                                <TextBlock Text="{Binding Name}" FontFamily="Cambria" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" />
                                            </StackPanel>
                                        </ui:Card>
                                    </DataTemplate>
                                </ui:VirtualizingItemsControl.ItemTemplate>
                                <ui:VirtualizingItemsControl.Template>
                                    <ControlTemplate>
                                        <ScrollViewer Margin="10" Height="310" Visibility="Visible">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ui:VirtualizingItemsControl.Template>
                            </ui:VirtualizingItemsControl>
                        </TabItem>

                    </TabControl>
                </Grid>

                <!-- Blackboard -->
                <ui:Card HorizontalAlignment="Right"  Grid.Column="2" Margin="0,60,0,0" MaxWidth="360" VerticalAlignment="Top">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ui:SymbolIcon Grid.Column="0" Symbol="Options24" FontSize="36" VerticalAlignment="Top" />
                        <TextBlock Grid.Column="0" Text="Blackboard" FontSize="24"
                               VerticalAlignment="Top" HorizontalAlignment="Center"
                               TextWrapping="Wrap" TextAlignment="Center"
                               RenderTransformOrigin="0.5,0.5" Width="185" Height="185" Margin="-160,25,0,0">
                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform X="0"/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <Grid Grid.Column="1" Height="410" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Title -->
                            <Grid Grid.Row="0" Margin="10,0" MaxWidth="350" >
                                <ComboBox ItemsSource="{Binding Source={x:Static data:ProjectData.Current}, Path=Blackboards}" SelectedItem="{Binding ViewModel.BlackboardSelected}" DisplayMemberPath="Name" MaxWidth="120" FontSize="20" Margin="10,0,140,0" />
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="10,0" >
                                    <Button Command="{Binding ViewModel.BlackboardsAddCommand}" Margin="0,0,10,0">
                                        <ui:SymbolIcon Symbol="Add24"  FontSize="30" />
                                    </Button>
                                    <Button Command="{Binding ViewModel.BlackboardsDeleteCommand}" Visibility="{Binding ViewModel.BlackboardSelected, Converter={StaticResource NulledVisibilityConverter}, ConverterParameter=true}">
                                        <ui:SymbolIcon Symbol="Delete24"  FontSize="30" />
                                    </Button>
                                </StackPanel>
                            </Grid>

                            <!-- Blackboard Select -->
                            <Grid Grid.Row="1" Margin="15,5,15,15" Visibility="{Binding ViewModel.BlackboardSelected, Converter={StaticResource NulledVisibilityConverter}, ConverterParameter=true}">
                                <StackPanel Orientation="Horizontal">
                                    <Button Margin="5,0" Command="{Binding ViewModel.BlackboardInsertCommand}" CommandParameter="{Binding ElementName=blackboardTypesComboBox, Path=SelectedValue}">
                                        <ui:SymbolIcon Symbol="Add24" FontSize="33" />
                                    </Button>
                                    <ComboBox x:Name="blackboardTypesComboBox" SelectedValuePath="Content" FontSize="24" Width="130">
                                        <ComboBoxItem Content="String" />
                                        <ComboBoxItem Content="Float" />
                                        <ComboBoxItem Content="Boolean" />
                                    </ComboBox>
                                </StackPanel>

                                <Button Command="{Binding ViewModel.BlackboardRemoveCommand}" CommandParameter="{Binding SelectedValue, ElementName=blackboardDataList}" Visibility="{Binding SelectedItem, ElementName=blackboardDataList, Converter={StaticResource NulledVisibilityConverter}, ConverterParameter=true}" Margin="10,0,0,0" HorizontalAlignment="Right">
                                    <ui:SymbolIcon Symbol="Delete24"  FontSize="30" />
                                </Button>
                            </Grid>

                            <!-- Blackboard Data -->
                            <ScrollViewer Grid.Row="2" Margin="10" Visibility="{Binding ViewModel.BlackboardSelected, Converter={StaticResource NulledVisibilityConverter}, ConverterParameter=true}">
                                <ListView x:Name="blackboardDataList" ItemsSource="{Binding ViewModel.BlackboardSelected.All}" MaxWidth="320" Margin="10,0,10,100">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBox Grid.Column="0" Text="{Binding Key}" Margin="5" Width="100" HorizontalAlignment="Stretch"/>
                                                <TextBox Grid.Column="1" Text="{Binding Value.String}" InputScope="Default" Margin="5" Width="100" HorizontalAlignment="Stretch" Visibility="{Binding Converter={StaticResource KeyValueVisibilityConverter}, ConverterParameter=String}"/>
                                                <TextBox Grid.Column="1" Text="{Binding Value.Float}" InputScope="Digits" Margin="5" Width="100" HorizontalAlignment="Stretch" Visibility="{Binding Converter={StaticResource KeyValueVisibilityConverter}, ConverterParameter=Float}"/>
                                                <ui:ToggleSwitch Grid.Column="1" IsChecked="{Binding Value.Boolean}" Margin="10,0" HorizontalAlignment="Right" Visibility="{Binding Converter={StaticResource KeyValueVisibilityConverter}, ConverterParameter=Boolean}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </ui:Card>
            </Grid>
        </Grid>
    </Viewbox>
</Page>
